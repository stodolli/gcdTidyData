swirl()
install.packages("swirl")
library(swirl)
library("swirl")
install.packages("swirl")
install.packages("testthat")
--version
R --version
version
version
install.packages("testthat")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
clear
clear()
swirl()
swirl
library(swirl)
swirl()
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(y)
plot(y,x)
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
x <- rnorm(50, 1.5, 2)
x1 <- rnorm(50, 1.5, 2)
x2 <- rnorm(50, 1.2, 1.5)
y <- (x1 + x2)*5 + x2
lm(y ~ x1+x2)
?lm
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
x1 <- rnorm(50000, 1.5, 2)
x2 <- rnorm(50000, 1.2, 1.5)
y <- (x1 + x2)*5 + x2
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
x1 <- rnorm(90000, 1.5, 2)
x2 <- rnorm(90000, 1.2, 1.5)
y <- (x1 + x2)*5 + x2
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
summaryRprof()
library(xml)
library(XML)
fileURL <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileURL, useInternal=TRUE)
install.packages("XML")
library(XML)
install.packages("XML")
install.packages("XML")
install.packages("xml2")
install.packages("XML")
install.packages("XML")
library(XML)
doc <- xmlTreeParse(fileURL, useInternal=TRUE)
doc
header(doc)
head(doc)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode
rootNode[1]
rootNode[[1]]
rootNode[[1]][[1]]
rootNode$food
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
rootNode[[1]]
xpathSApply(rootNode, "//price", xmlValue)
xpathSApply(rootNode, "//calories", xmlValue)
xpathSApply(rootNode, "//description", xmlValue)
library(jsonlite)
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
installed.packages("curl")
installe.packages("curl")
install.packages("curl")
jsonData <- fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
nrow(jsonData)
names(jsonData$owner)
names(jsonData$owner$login)
jsonData$owner$login
myjson <- toJSON(iris, pretty = TRUE)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
jsonData$teams_url
jsonData$name
jsonData$owner
jsonData$owner$url
names(jsonData)
ncol(jsonData)
jsonData
jsonData[1]
jsonData[1,]
jsonData$owner[1,]
jsonData$owner.url
jsonData$owner$url
jsonData$owner$url[1,]
jsonData$owner$url[1]
dbConnect()
install.packages("dbConnect")
install.packages("dbConnect")
library(dbConnect)
dbConnect(MySQL(), user="genome", host = "genome-mysql.cse.uscs.edu")
dbConnect(MySQL(), user="genome", host = "genome-mysql.cse.ucsc.edu")
dbDisconnect(*)
dbDisconnect(<MySQLConnection:0,0>)
dbDisconnect("<MySQLConnection:0,0>")
ucscDb <- dbConnect(MySQL(), user="genome", host = "genome-mysql.cse.ucsc.edu")
dbDisconnect()
dbDisconnect("*")
result <- dbGetQuery(ucscDb, "show databases")
result
head(result)
dbDisconnect(ucscDb)
install.packages("ggplot2")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Exploratory Data Analysis")
swirl()
q()
library(swirl)
swirl()
install.packages("jpeg")
swirl()
help
help()
help(swirl)
bye()
swirl()
play()
bye()
exit
exit()
library(dplyr)
exit()
quit()
setwd("~/Documents/DataScience/GettingAndCleaningData/Assignments/gcdTidyData")
testdatadir <- dir("../UCI_HAR_Dataset/test/")
traindatadir <- dir("../UCI_HAR_Dataset/train/")
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
lineids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
testdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
dim(testdata)
lineids
testselect <- testdata[, lineids]
head(testselect)
names(testselect)
names(testdata) <- features
names(testdata)
names(testdata) <- features[,2]
names(testdata)
testselect <- testdata[, lineids]
names(testselect)
activitylabels
summary(testdata)
str(testdata)
library(dplyr)
activityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt")
)
activityids
activitylabels
dim(activityids)
dim(activitylabels)
length(activityids)
dim(testdata)
activitylabels[2]
activitylabels[2,]
activitylabels[2,2]
activitylabels[c(1,2),2]
activitylabels[c(1,2,1,1,3),2]
testdata <- mutate(testdata, activity = activitylabels[activityids, 2])
activityids
activitylabels[activityids, 2]
testdata <- mutate(testdata, activity = activitylabels[activityids, 2])
names(testdata)
testdata <- mutate(testdata, activity=activitylabels[activityids,2])
testdata$activity <- activitylabels[activityids,2]
names(testdata)
testdata$activity
subjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
subjectids
testdata$subject <- subjectids
names(testdata)
### Reading feature labels and activity labels
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
attributeids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
### Test data
## Reading test activity ids and subject ids
testactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt"))
testsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
rawtestdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
testdata <- rawtestdata[, attributeids]
testdata$activity <- activitylabels[testactivityids,2]
testdata$subject <- testsubjectids
### Training data
## Reading train activity ids and subject ids
trainactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/train/y_train.txt"))
trainsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/train/subject_train.txt"))
rawtraindata <- read.table("../UCI_HAR_Dataset/train/X_train.txt", header = FALSE)
traindata <- rawtraindata[, attributeids]
traindata$activity <- activitylabels[trainactivityids,2]
traindata$subject <- trainsubjectids
names(testdata)
### Reading feature labels and activity labels
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
attributeids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
### Test data
## Reading test activity ids and subject ids
testactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt"))
testsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
rawtestdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
names(rawtestdata) <- features[,2]
testdata <- rawtestdata[, attributeids]
rm(rawtestdata)
testdata$activity <- activitylabels[testactivityids,2]
testdata$subject <- testsubjectids
### Training data
## Reading train activity ids and subject ids
trainactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/train/y_train.txt"))
trainsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/train/subject_train.txt"))
rawtraindata <- read.table("../UCI_HAR_Dataset/train/X_train.txt", header = FALSE)
names(rawtraindata) <- features[,2]
traindata <- rawtraindata[, attributeids]
rm(rawtraindata)
traindata$activity <- activitylabels[trainactivityids,2]
traindata$subject <- trainsubjectids
names(testdata)
head(testdata, n = )
head(testdata, n = 10)
table(testdata)
str(testdata)
testdata$subject
unique(testdata$subject)
unique(traindata$subject)
summarize(testdata)
names(testdata)
testdata
head(testdata)
summarize(testdata)
summarize(traindata)
testdata <- data.frame(testdata)
summarize(traindata)
summarize(testdata)
library(dplyr)
summarize(testdata)
summarize(testdata, )
summarize(testdata, fBodyGyro-std()-Z)
names(testdata)
summarize(testdata, "fBodyGyro-std()-Z")
summarize(testdata, fBodyGyro\-std()\-Z)
names(testdata)
head(testdata)
summarize(testdata, fBodyGyro.std...Z)
testbysubject <- group_by(testdata, subject)
summarize(testbysubject)
summarize(testbysubject, )
summarize(testbysubject, fBodyGyro.std...Z)
summarize(testbysubject, fBodyGyro.std...Z)
features
gsub("-", "_", features[,2])
features[,2] <- gsub("-", "_", features[,2])
features[,2] <- gsub("()", "", features[,2])
### Reading feature labels and activity labels
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
attributeids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
features[,2] <- gsub("-", "_", features[,2])
features[,2] <- gsub("()", "", features[,2])
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
### Test data
## Reading test activity ids and subject ids
testactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt"))
testsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
rawtestdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
names(rawtestdata) <- features[,2]
testdata <- rawtestdata[, attributeids]
rm(rawtestdata)
testdata$activity <- activitylabels[testactivityids,2]
testdata$subject <- testsubjectids
### Training data
## Reading train activity ids and subject ids
trainactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/train/y_train.txt"))
trainsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/train/subject_train.txt"))
rawtraindata <- read.table("../UCI_HAR_Dataset/train/X_train.txt", header = FALSE)
names(rawtraindata) <- features[,2]
traindata <- rawtraindata[, attributeids]
rm(rawtraindata)
traindata$activity <- activitylabels[trainactivityids,2]
traindata$subject <- trainsubjectids
testbysubject <- group_by(testdata, subject)
summarize(testbysubject)
summarize(testbysubject, fBodyGyro_std_Z)
names(testdata)
### Reading feature labels and activity labels
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
attributeids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
features[,2] <- gsub("-", "_", features[,2])
features[,2] <- gsub("\(\)", "", features[,2])
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
### Test data
## Reading test activity ids and subject ids
testactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt"))
testsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
rawtestdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
names(rawtestdata) <- features[,2]
testdata <- rawtestdata[, attributeids]
rm(rawtestdata)
testdata$activity <- activitylabels[testactivityids,2]
testdata$subject <- testsubjectids
### Training data
## Reading train activity ids and subject ids
trainactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/train/y_train.txt"))
trainsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/train/subject_train.txt"))
rawtraindata <- read.table("../UCI_HAR_Dataset/train/X_train.txt", header = FALSE)
names(rawtraindata) <- features[,2]
traindata <- rawtraindata[, attributeids]
rm(rawtraindata)
traindata$activity <- activitylabels[trainactivityids,2]
traindata$subject <- trainsubjectids
names(testdata)
features
gsub("()", "", features[,2])
gsub("(", "", features[,2])
gsub("\()", "", features[,2])
gsub("\\()", "", features[,2])
### Reading feature labels and activity labels
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
attributeids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
features[,2] <- gsub("-", "_", features[,2])
features[,2] <- gsub("\\()", "", features[,2])
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
### Test data
## Reading test activity ids and subject ids
testactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt"))
testsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
rawtestdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
names(rawtestdata) <- features[,2]
testdata <- rawtestdata[, attributeids]
rm(rawtestdata)
testdata$activity <- activitylabels[testactivityids,2]
testdata$subject <- testsubjectids
### Training data
## Reading train activity ids and subject ids
trainactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/train/y_train.txt"))
trainsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/train/subject_train.txt"))
rawtraindata <- read.table("../UCI_HAR_Dataset/train/X_train.txt", header = FALSE)
names(rawtraindata) <- features[,2]
traindata <- rawtraindata[, attributeids]
rm(rawtraindata)
traindata$activity <- activitylabels[trainactivityids,2]
traindata$subject <- trainsubjectids
testbysubject <- group_by(testdata, subject)
summarize(testbysubject)
summarize(testbysubject, fBodyGyro_std_Z)
names(testdata)
summarize(testbysubject, fBodyGyro_std_Z)
summarize(testbysubject, "fBodyGyro_std_Z")
summarize(testbysubject, fBodyGyro_std_Z = fBodyGyro_std_Z)
?group_by
testbysubject <- group_by(testdata, subject, activity)
summarise(testbysubject, mean(fBodyGyro_std_X))
summarise(testbysubject, mean())
summarise(testbysubject, mean(names(testdata)))
summarise(testbysubject, mean("fBodyGyro_std_X"))
summarise(testbysubject, mean(fBodyGyro_std_X))
summarise(testbysubject)
summarise_each(testbysubject, funs(mean))
summarized <- summarise_each(testbysubject, funs(mean))
summarized
head(summarized)
dim(summarized)
summary(summarized)
str(summarized)
summarized
combodata <- rbind(testdata, traindata)
combodata
head(combodata)
unique(combodata$subject)
combodata <- arrange(combodata, subject, activity)
unique(combodata$subject)
### Reading feature labels and activity labels
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
attributeids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
features[,2] <- gsub("-", "_", features[,2])
features[,2] <- gsub("\\()", "", features[,2])
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
### Reading activity ids and subject ids
## Test data set
testactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt"))
testsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
rawtestdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
names(rawtestdata) <- features[,2]
testdata <- rawtestdata[, attributeids]
rm(rawtestdata)
testdata$activity <- activitylabels[testactivityids,2]
testdata$subject <- testsubjectids
## Training data set
trainactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/train/y_train.txt"))
trainsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/train/subject_train.txt"))
rawtraindata <- read.table("../UCI_HAR_Dataset/train/X_train.txt", header = FALSE)
names(rawtraindata) <- features[,2]
traindata <- rawtraindata[, attributeids]
rm(rawtraindata)
traindata$activity <- activitylabels[trainactivityids,2]
traindata$subject <- trainsubjectids
### Merging the data vertically
combodata <- rbind(train, testdata)
combodata <- arrange(combodata, subject, activity)
## Finding means for each subject and each activity
by_subject_activity <- group_by(combodata, subject, activity)
means_summary <- summarise_each(by_subject_activity, funs(mean))
### Reading feature labels and activity labels
features <- read.csv("../UCI_HAR_Dataset/features.txt", sep = " ",
header = FALSE)
features[,2] <- as.character(features[,2])
attributeids <- c(grep("mean()", features[,2]), grep("std()", features[,2]))
features[,2] <- gsub("-", "_", features[,2])
features[,2] <- gsub("\\()", "", features[,2])
activitylabels <- read.csv("../UCI_HAR_Dataset/activity_labels.txt", sep = " ",
header = FALSE)
### Reading activity ids and subject ids
## Test data set
testactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/test/y_test.txt"))
testsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/test/subject_test.txt"))
rawtestdata <- read.table("../UCI_HAR_Dataset/test/X_test.txt", header = FALSE)
names(rawtestdata) <- features[,2]
testdata <- rawtestdata[, attributeids]
rm(rawtestdata)
testdata$activity <- activitylabels[testactivityids,2]
testdata$subject <- testsubjectids
## Training data set
trainactivityids <- as.numeric(readLines("../UCI_HAR_Dataset/train/y_train.txt"))
trainsubjectids <- as.numeric(readLines("../UCI_HAR_Dataset/train/subject_train.txt"))
rawtraindata <- read.table("../UCI_HAR_Dataset/train/X_train.txt", header = FALSE)
names(rawtraindata) <- features[,2]
traindata <- rawtraindata[, attributeids]
rm(rawtraindata)
traindata$activity <- activitylabels[trainactivityids,2]
traindata$subject <- trainsubjectids
### Merging the data vertically
combodata <- rbind(traindata, testdata)
combodata <- arrange(combodata, subject, activity)
## Finding means for each subject and each activity
by_subject_activity <- group_by(combodata, subject, activity)
means_summary <- summarise_each(by_subject_activity, funs(mean))
str(means_summary)
head(means_summary)
summary(summarise)
summary(means_summary)
write.table(means_summary, file = "tidy_data.txt", row.names = FALSE)
names(combodata)
print(names(combodata))
